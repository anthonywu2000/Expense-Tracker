{"ast":null,"code":"var _jsxFileName = \"/Users/anthonywu/WebstormProjects/Expense-Tracker/src/components/AddTransaction.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useContext } from \"react\";\nimport { GlobalContext } from \"../context/GlobalState\";\nimport uuid from \"react-uuid\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const AddTransaction = () => {\n  _s();\n\n  const [text, setText] = useState(\"\");\n  const [amount, setAmount] = useState(0);\n  const context = useContext(GlobalContext);\n\n  const onSubmit = e => {\n    e.preventDefault();\n    const newTransaction = {\n      id: uuid(),\n      text,\n      amount\n    };\n\n    if (newTransaction.amount === 0) {\n      alert(\"Cannot enter an amount that is $0.\");\n    } else {\n      context.addTransaction(newTransaction);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Add New Transaction\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: onSubmit,\n      children: [\" \", /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-control\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Transaction Name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: text,\n          onChange: e => setText(e.target.value),\n          placeholder: \"Enter transaction name....\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-control\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: [\"Transaction Amount\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 37,\n            columnNumber: 46\n          }, this), /*#__PURE__*/_jsxDEV(\"small\", {\n            children: \"(Enter negative sign (-) for expenses, enter positive sign (+) for incomes)\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 38,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"number\",\n          value: amount,\n          onChange: e => setAmount(e.target.value),\n          placeholder: \"Enter transaction amount....\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn\",\n        children: \"Submit Transaction\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 9\n  }, this);\n};\n\n_s(AddTransaction, \"CVLXHynA9cVo+2Z/schEgizmgQg=\");\n\n_c = AddTransaction;\n\nvar _c;\n\n$RefreshReg$(_c, \"AddTransaction\");","map":{"version":3,"sources":["/Users/anthonywu/WebstormProjects/Expense-Tracker/src/components/AddTransaction.js"],"names":["React","useState","useContext","GlobalContext","uuid","AddTransaction","text","setText","amount","setAmount","context","onSubmit","e","preventDefault","newTransaction","id","alert","addTransaction","target","value"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,UAA1B,QAA4C,OAA5C;AACA,SAASC,aAAT,QAA8B,wBAA9B;AACA,OAAOC,IAAP,MAAiB,YAAjB;;AAEA,OAAO,MAAMC,cAAc,GAAG,MAAM;AAAA;;AAChC,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBN,QAAQ,CAAC,EAAD,CAAhC;AACA,QAAM,CAACO,MAAD,EAASC,SAAT,IAAsBR,QAAQ,CAAC,CAAD,CAApC;AACA,QAAMS,OAAO,GAAGR,UAAU,CAACC,aAAD,CAA1B;;AAEA,QAAMQ,QAAQ,GAAIC,CAAD,IAAO;AACpBA,IAAAA,CAAC,CAACC,cAAF;AAED,UAAMC,cAAc,GAAG;AACnBC,MAAAA,EAAE,EAAEX,IAAI,EADW;AAEnBE,MAAAA,IAFmB;AAGnBE,MAAAA;AAHmB,KAAvB;;AAMA,QAAIM,cAAc,CAACN,MAAf,KAA0B,CAA9B,EAAiC;AAC7BQ,MAAAA,KAAK,CAAC,oCAAD,CAAL;AACH,KAFD,MAEO;AACHN,MAAAA,OAAO,CAACO,cAAR,CAAuBH,cAAvB;AACH;AACH,GAdD;;AAgBA,sBACI;AAAA,4BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI;AAAM,MAAA,QAAQ,EAAIH,QAAlB;AAAA,mCACI;AAAK,QAAA,SAAS,EAAG,cAAjB;AAAA,gCACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,eAEI;AAAO,UAAA,IAAI,EAAG,MAAd;AAAqB,UAAA,KAAK,EAAIL,IAA9B;AAAoC,UAAA,QAAQ,EAAKM,CAAD,IAAOL,OAAO,CAACK,CAAC,CAACM,MAAF,CAASC,KAAV,CAA9D;AACO,UAAA,WAAW,EAAG;AADrB;AAAA;AAAA;AAAA;AAAA,gBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAOI;AAAK,QAAA,SAAS,EAAG,cAAjB;AAAA,gCACI;AAAA,wDAAyB;AAAA;AAAA;AAAA;AAAA,kBAAzB,eACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADJ;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,eAII;AAAO,UAAA,IAAI,EAAG,QAAd;AAAuB,UAAA,KAAK,EAAIX,MAAhC;AAAwC,UAAA,QAAQ,EAAKI,CAAD,IAAOH,SAAS,CAACG,CAAC,CAACM,MAAF,CAASC,KAAV,CAApE;AACO,UAAA,WAAW,EAAG;AADrB;AAAA;AAAA;AAAA;AAAA,gBAJJ;AAAA;AAAA;AAAA;AAAA;AAAA,cAPJ,eAeI;AAAQ,QAAA,SAAS,EAAG,KAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAfJ;AAAA;AAAA;AAAA;AAAA;AAAA,YAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAsBH,CA3CM;;GAAMd,c;;KAAAA,c","sourcesContent":["import React, { useState, useContext } from \"react\";\nimport { GlobalContext } from \"../context/GlobalState\";\nimport uuid from \"react-uuid\";\n\nexport const AddTransaction = () => {\n    const [text, setText] = useState(\"\");\n    const [amount, setAmount] = useState(0);\n    const context = useContext(GlobalContext);\n\n    const onSubmit = (e) => {\n        e.preventDefault();\n\n       const newTransaction = {\n           id: uuid(),\n           text,\n           amount\n       }\n\n       if (newTransaction.amount === 0) {\n           alert(\"Cannot enter an amount that is $0.\");\n       } else {\n           context.addTransaction(newTransaction);\n       }\n    }\n\n    return (\n        <div>\n            <h3>Add New Transaction</h3>\n            <form onSubmit = {onSubmit}> {/*The effect of the submission*/}\n                <div className = \"form-control\">\n                    <label>Transaction Name</label>\n                    <input type = \"text\" value = {text} onChange = {(e) => setText(e.target.value)}\n                           placeholder = \"Enter transaction name....\" />\n                </div>\n\n                <div className = \"form-control\">\n                    <label>Transaction Amount<br/>\n                        <small>(Enter negative sign (-) for expenses, enter positive sign (+) for incomes)</small>\n                    </label>\n                    <input type = \"number\" value = {amount} onChange = {(e) => setAmount(e.target.value)}\n                           placeholder = \"Enter transaction amount....\" />\n                </div>\n\n                <button className = \"btn\">Submit Transaction</button>\n            </form>\n        </div>\n    )\n}"]},"metadata":{},"sourceType":"module"}